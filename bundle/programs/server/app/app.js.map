{"version":3,"sources":["meteor://ðŸ’»app/imports/api/pesquisas/server/methods.js","meteor://ðŸ’»app/imports/api/pesquisas/server/publications.js","meteor://ðŸ’»app/imports/api/pesquisas/pesquisas.js","meteor://ðŸ’»app/imports/api/pesquisas/server_imports.js","meteor://ðŸ’»app/imports/api/sincronizacao/server/methods.js","meteor://ðŸ’»app/imports/api/sincronizacao/server_imports.js","meteor://ðŸ’»app/imports/api/token/server_imports.js","meteor://ðŸ’»app/imports/api/token/token.js","meteor://ðŸ’»app/imports/startup/server/api.js","meteor://ðŸ’»app/imports/startup/server/browser-policy.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/server/main.js"],"names":["Pesquisas","Meteor","methods","console","warn","remove","insert","entrevistadores","status","bairros","entrevistas","bairro","dataHora","Date","valueOf","localizacao","latitude","longitutde","dataObj","error","log","id","update","$set","publish","filter","projection","Object","keys","length","find","fields","Ground","Collection","connection","deny","allow","HTTP","API","settings","api","URLS","login","salvar_entrevista","pesquisas","sincronizarPesquisas","url","options","post","sincronizarSalvarEntrevistas","Token","BrowserPolicy","content","allowSameOriginForAll","allowFontDataUrl","disallowInlineScripts","disallowEval","allowOriginForAll","pesquisasRemovidas","existePesquisa","count","cidade","id2"],"mappings":"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","file":"/app.js","sourcesContent":["import { Pesquisas } from \"./../pesquisas.js\"\nimport {Meteor} from 'meteor/meteor';\n\nMeteor.methods({\n    'pesquisas.sincronizar' () {\n\n        console.warn('Nesse momento, os dados devem ser sincronizados com o servidor, conferidos e entÃ£o' +\n            ' apagar a collection local!');\n\n        Pesquisas.remove({});\n\n    },\n    'pesquisas.insertDummy' () {\n        Pesquisas.insert({\n            entrevistadores: ['entrevistador1-id'],\n            status: 'aberta',\n            bairros: ['bairro1', 'bairro2'],\n            entrevistas: [\n                {\n                    bairro: \"bairro1\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                },\n                {\n                    bairro: \"bairro1\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                },\n                {\n                    bairro: \"bairro2\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                }\n            ]\n        });\n    },\n    'pesquisas.insert' ( dataObj ) {\n\n        // dataObj.userId = Meteor.userId();\n\n        console.warn('implementar pesquisas.insert');return;\n\n        // check(dataObj, Pesquisas.simpleSchema());\n\n        Pesquisas.insert( dataObj, ( error ) => {\n            if ( error ) {\n                console.log( error );\n            }\n        });\n    },\n    'pesquisas.update' ( id,dataObj ) {\n\n        console.warn('implementar pesquisas.update');return;\n\n        // check(id, String);\n        // check(dataObj, Pesquisas.simpleSchema());\n\n        Pesquisas.update( id,{\n            $set: dataObj\n        });\n    },\n    'pesquisas.delete'(id) {\n\n        console.warn('implementar pesquisas.insert');return;\n        // check(id, String);\n        Pesquisas.remove(id);\n    },\n});","import { Pesquisas } from \"../pesquisas.js\";\n\nMeteor.publish( 'Pesquisas', function(filter, projection){\n\n    projection || (projection = {});\n\n    filter || (filter = {});\n\n    // se existe um filtro\n    if( typeof filter === \"object\") {\n\n        if(Object.keys(projection).length === 0) {\n\n            if (Object.keys(filter).length === 0) {\n\n                return Pesquisas.find();\n            } else {\n\n                return Pesquisas.find(filter);\n            }\n        }\n        else {\n            return Pesquisas.find(filter, {fields: projection});\n        }\n    }\n    else {\n        return null;\n    }\n});","export const Pesquisas = new Ground.Collection('pesquisas', { connection: null });\n\n// var Api = new Restivus({\n//     useDefaultAuth: true,\n//     prettyJson: true\n// });\n\n\n// Deny all client-side updates on the Cliente collection\nPesquisas.deny({\n    insert() { return false; }, // permite insert\n    update() { return false; },\n    remove() { return false; },\n});\nPesquisas.allow({\n    insert: () => {return true},\n    update: () => {return true},\n    remove: () => {return true}\n});","import './server/methods.js'\nimport './server/publications.js'\nimport './pesquisas.js'","/**\n * Created by lucas on 9/29/16.\n */\nimport {Meteor} from 'meteor/meteor';\nimport {HTTP} from 'meteor/http';\nimport {Pesquisas} from '../../pesquisas/pesquisas';\n\nconst API = Meteor.settings.public.api;\n\nconst URLS = {\n    login: API.login,\n    salvar_entrevista : API.salvar_entrevista,\n    pesquisas: API.pesquisas\n};\n\nMeteor.methods({\n    sincronizarPesquisas ({url, options}) {\n        return HTTP.post(url, options);\n    },\n\n    sincronizarSalvarEntrevistas ({url, options}) {\n        return HTTP.post(url, options);\n    }\n});","/**\n * Created by lucas on 9/29/16.\n */\nimport './server/methods';","import './token.js'","/**\n * Created by lucas on 8/14/16.\n */\nexport const Token = new Ground.Collection('token', { connection: null });\n\n// Deny all client-side updates on the Cliente collection\nToken.deny({\n    insert() { return false; }, // permite insert\n    update() { return false; },\n    remove() { return false; },\n});\nToken.allow({\n    insert: () => {return true},\n    update: () => {return true},\n    remove: () => {return true}\n});","import \"../../api/pesquisas/server_imports\";\nimport \"../../api/token/server_imports\";\nimport \"../../api/sincronizacao/server_imports\";\n","// e.g., BrowserPolicy.content.allowOriginForAll( 's3.amazonaws.com' );\nBrowserPolicy.content.allowSameOriginForAll();\nBrowserPolicy.content.allowFontDataUrl(); // Carregar fontes\nBrowserPolicy.content.disallowInlineScripts(); // Desabilita a tag <script> no html\nBrowserPolicy.content.disallowEval(); // nao permite uso de eval\n// BrowserPolicy.content.allowEval();\nBrowserPolicy.content.allowOriginForAll('*');\n//BrowserPolicy.content.disallowInlineStyles()","console.log(\"Iniciando o arquivo fixtures.js\");\n\nimport { Pesquisas } from '../../api/pesquisas/pesquisas';\n\nreturn;\n\nlet pesquisasRemovidas = Pesquisas.remove({});\n\nconsole.log('Pesquisas removidas = ' + pesquisasRemovidas);\n\nlet existePesquisa = Pesquisas.find().count() > 0;\n\n// Insere ao menos uma pesquisa para fazer os testes\nif(!existePesquisa) {\n\n    let id = Pesquisas.insert({\n        cidade: \"Itabirito\",\n        entrevistadores: ['entrevistador1-id'],\n        status: 'aberta',\n        bairros: ['bairro1', 'bairro2'],\n    });\n    let id2 = Pesquisas.insert({\n        cidade: \"Belo Horizote\",\n        entrevistadores: ['entrevistador1-id'],\n        status: 'aberta',\n        bairros: ['SÃ£o Francisco', 'Ouro Preto'],\n    });\n\n    console.log('Pesquisa inserida = ' + id);\n\n}","import './browser-policy';\nimport './fixtures';\nimport './api';\n\n","import '/imports/startup/server';\n"]}