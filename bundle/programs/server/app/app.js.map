{"version":3,"sources":["meteor://ðŸ’»app/imports/api/pesquisas/server/methods.js","meteor://ðŸ’»app/imports/api/pesquisas/server/publications.js","meteor://ðŸ’»app/imports/api/pesquisas/pesquisas.js","meteor://ðŸ’»app/imports/api/pesquisas/server_imports.js","meteor://ðŸ’»app/imports/api/sincronizacao/server/methods.js","meteor://ðŸ’»app/imports/api/sincronizacao/server_imports.js","meteor://ðŸ’»app/imports/api/token/server_imports.js","meteor://ðŸ’»app/imports/api/token/token.js","meteor://ðŸ’»app/imports/startup/server/api.js","meteor://ðŸ’»app/imports/startup/server/browser-policy.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Pesquisas } from \"./../pesquisas.js\"\nimport {Meteor} from 'meteor/meteor';\n\nMeteor.methods({\n    'pesquisas.sincronizar' () {\n\n        console.warn('Nesse momento, os dados devem ser sincronizados com o servidor, conferidos e entÃ£o' +\n            ' apagar a collection local!');\n\n        Pesquisas.remove({});\n\n    },\n    'pesquisas.insertDummy' () {\n        Pesquisas.insert({\n            entrevistadores: ['entrevistador1-id'],\n            status: 'aberta',\n            bairros: ['bairro1', 'bairro2'],\n            entrevistas: [\n                {\n                    bairro: \"bairro1\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                },\n                {\n                    bairro: \"bairro1\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                },\n                {\n                    bairro: \"bairro2\",\n                    dataHora: new Date().valueOf(), // timestamp\n                    localizacao: {\n                        latitude: 1,\n                        longitutde: 1\n                    }\n                }\n            ]\n        });\n    },\n    'pesquisas.insert' ( dataObj ) {\n\n        // dataObj.userId = Meteor.userId();\n\n        console.warn('implementar pesquisas.insert');return;\n\n        // check(dataObj, Pesquisas.simpleSchema());\n\n        Pesquisas.insert( dataObj, ( error ) => {\n            if ( error ) {\n                console.log( error );\n            }\n        });\n    },\n    'pesquisas.update' ( id,dataObj ) {\n\n        console.warn('implementar pesquisas.update');return;\n\n        // check(id, String);\n        // check(dataObj, Pesquisas.simpleSchema());\n\n        Pesquisas.update( id,{\n            $set: dataObj\n        });\n    },\n    'pesquisas.delete'(id) {\n\n        console.warn('implementar pesquisas.insert');return;\n        // check(id, String);\n        Pesquisas.remove(id);\n    },\n});","import { Pesquisas } from \"../pesquisas.js\";\n\nMeteor.publish( 'Pesquisas', function(filter, projection){\n\n    projection || (projection = {});\n\n    filter || (filter = {});\n\n    // se existe um filtro\n    if( typeof filter === \"object\") {\n\n        if(Object.keys(projection).length === 0) {\n\n            if (Object.keys(filter).length === 0) {\n\n                return Pesquisas.find();\n            } else {\n\n                return Pesquisas.find(filter);\n            }\n        }\n        else {\n            return Pesquisas.find(filter, {fields: projection});\n        }\n    }\n    else {\n        return null;\n    }\n});","export const Pesquisas = new Ground.Collection('pesquisas', { connection: null });\n\n// var Api = new Restivus({\n//     useDefaultAuth: true,\n//     prettyJson: true\n// });\n\n\n// Deny all client-side updates on the Cliente collection\nPesquisas.deny({\n    insert() { return false; }, // permite insert\n    update() { return false; },\n    remove() { return false; },\n});\nPesquisas.allow({\n    insert: () => {return true},\n    update: () => {return true},\n    remove: () => {return true}\n});","import './server/methods.js'\nimport './server/publications.js'\nimport './pesquisas.js'","/**\n * Created by lucas on 9/29/16.\n */\nimport {Meteor} from 'meteor/meteor';\nimport {HTTP} from 'meteor/http';\nimport {Pesquisas} from '../../pesquisas/pesquisas';\n\nconst API = Meteor.settings.public.api;\n\nconst URLS = {\n    login: API.login,\n    salvar_entrevista : API.salvar_entrevista,\n    pesquisas: API.pesquisas\n};\n\nMeteor.methods({\n    sincronizarPesquisas ({url, options}) {\n        return HTTP.post(url, options);\n    },\n\n    sincronizarSalvarEntrevistas ({url, options}) {\n        return HTTP.post(url, options);\n    }\n});","/**\n * Created by lucas on 9/29/16.\n */\nimport './server/methods';","import './token.js'","/**\n * Created by lucas on 8/14/16.\n */\nexport const Token = new Ground.Collection('token', { connection: null });\n\n// Deny all client-side updates on the Cliente collection\nToken.deny({\n    insert() { return false; }, // permite insert\n    update() { return false; },\n    remove() { return false; },\n});\nToken.allow({\n    insert: () => {return true},\n    update: () => {return true},\n    remove: () => {return true}\n});","import \"../../api/pesquisas/server_imports\";\nimport \"../../api/token/server_imports\";\nimport \"../../api/sincronizacao/server_imports\";\n","// e.g., BrowserPolicy.content.allowOriginForAll( 's3.amazonaws.com' );\nBrowserPolicy.content.allowSameOriginForAll();\nBrowserPolicy.content.allowFontDataUrl(); // Carregar fontes\nBrowserPolicy.content.disallowInlineScripts(); // Desabilita a tag <script> no html\nBrowserPolicy.content.disallowEval(); // nao permite uso de eval\n// BrowserPolicy.content.allowEval();\nBrowserPolicy.content.allowOriginForAll('*');\n//BrowserPolicy.content.disallowInlineStyles()","console.log(\"Iniciando o arquivo fixtures.js\");\n\nimport { Pesquisas } from '../../api/pesquisas/pesquisas';\n\nreturn;\n\nlet pesquisasRemovidas = Pesquisas.remove({});\n\nconsole.log('Pesquisas removidas = ' + pesquisasRemovidas);\n\nlet existePesquisa = Pesquisas.find().count() > 0;\n\n// Insere ao menos uma pesquisa para fazer os testes\nif(!existePesquisa) {\n\n    let id = Pesquisas.insert({\n        cidade: \"Itabirito\",\n        entrevistadores: ['entrevistador1-id'],\n        status: 'aberta',\n        bairros: ['bairro1', 'bairro2'],\n    });\n    let id2 = Pesquisas.insert({\n        cidade: \"Belo Horizote\",\n        entrevistadores: ['entrevistador1-id'],\n        status: 'aberta',\n        bairros: ['SÃ£o Francisco', 'Ouro Preto'],\n    });\n\n    console.log('Pesquisa inserida = ' + id);\n\n}","import './browser-policy';\nimport './fixtures';\nimport './api';\n\n","import '/imports/startup/server';\n"]}