{"version":3,"sources":["meteor://ðŸ’»app/packages/cottz:flow-router-auth/flow-router-auth.js"],"names":["FlowAuth","controllers","Mongo","Collection","redirect","hasPermission","ReactiveVar","authReady","allow","callback","options","check","Function","controller","action","createdAt","Date","getTime","except","only","Array","isArray","groupId","Random","id","group","auth","push","insert","allows","c","path","next","set","parent","length","unshift","$in","_","flatten","find","$or","$ne","sort","forEach","route","FlowRouter","go","permissionGranted","get","ready","Auth"],"mappings":"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","file":"/packages/cottz_flow-router-auth.js","sourcesContent":["class FlowAuth {\n  constructor () {\n    this.controllers = new Mongo.Collection(null);\n    this.redirect = 'notFound';\n    this.hasPermission = new ReactiveVar(false);\n    this.authReady = new ReactiveVar(true);\n  }\n  allow (callback, options) {\n    check(callback, Function);\n\n    const controller = {\n      action: callback,\n      createdAt: (new Date()).getTime()\n    };\n\n    if (options) {\n      options.except\n      ? controller.except = options.except\n      : controller.only = options.only || options\n      controller.redirect = options.redirect\n    };\n\n    if (typeof controller.only == 'object' && !Array.isArray(controller.only)) {\n      const groupId = Random.id();\n      const group = controller.only;\n\n      if (!group.auth) group.auth = [];\n      group.auth.push(groupId);\n\n      controller.only = groupId;\n    }\n    this.controllers.insert(controller);\n  }\n  allows (controllers) {\n    for (let c of controllers) {\n      this.allow(c.action, c);\n    };\n  }\n  check (path, group, redirect) {\n    let next = true;\n    let only = path;\n\n    this.authReady.set(false);\n\n    if (group) {\n      const auth = [];\n\n      while (group) {\n        if (group.auth)\n          auth.push(group.auth);\n        group = group.parent;\n      };\n\n      if (auth.length) {\n        auth.unshift(only);\n        only = {$in: _.flatten(auth)};\n      }\n    }\n\n    this.controllers.find({\n      $or: [\n        {only},\n        {except: {$ne: path}, only: null}\n      ]\n    }, {sort: {createdAt: 1}}).forEach(route => {\n      if (!next) return;\n\n      next = route.action();\n\n      if (!next) {\n        typeof redirect === 'function'\n        ? redirect(route.redirect || this.redirect)\n        : FlowRouter.go(route.redirect || this.redirect);\n      }\n    });\n\n    this.authReady.set(true);\n    this.hasPermission.set(next);\n  }\n  permissionGranted () {\n    return this.hasPermission.get();\n  }\n  ready () {\n    return this.authReady.get();\n  }\n};\n// ----------------------------------------------------------------------\nFlowRouter.Auth = new FlowAuth();"]}