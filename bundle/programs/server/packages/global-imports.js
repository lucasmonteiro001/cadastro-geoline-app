/* Imports for global scope */

MongoInternals = Package.mongo.MongoInternals;
Mongo = Package.mongo.Mongo;
ReactiveVar = Package['reactive-var'].ReactiveVar;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
Blaze = Package.ui.Blaze;
UI = Package.ui.UI;
Handlebars = Package.ui.Handlebars;
Spacebars = Package.spacebars.Spacebars;
ECMAScript = Package.ecmascript.ECMAScript;
ReactiveTable = Package['aslagle:reactive-table'].ReactiveTable;
i18n = Package['anti:i18n'].i18n;
Bert = Package['themeteorchef:bert'].Bert;
ValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;
Factory = Package['dburles:factory'].Factory;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;
FlowRouterHelpers = Package['arillo:flow-router-helpers'].FlowRouterHelpers;
moment = Package['momentjs:moment'].moment;
Random = Package.random.Random;
Ground = Package['ground:db'].Ground;
GroundDB = Package['ground:db'].GroundDB;
HTTP = Package.http.HTTP;
HTTPInternals = Package.http.HTTPInternals;
request = Package['froatsnook:request'].request;
lodash = Package['erasaur:meteor-lodash'].lodash;
_ = Package.underscore._;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
WebApp = Package.webapp.WebApp;
main = Package.webapp.main;
WebAppInternals = Package.webapp.WebAppInternals;
DDP = Package['ddp-client'].DDP;
DDPServer = Package['ddp-server'].DDPServer;
LaunchScreen = Package['launch-screen'].LaunchScreen;
HTML = Package.htmljs.HTML;
meteorInstall = Package.modules.meteorInstall;
Buffer = Package.modules.Buffer;
process = Package.modules.process;
Symbol = Package['ecmascript-runtime'].Symbol;
Map = Package['ecmascript-runtime'].Map;
Set = Package['ecmascript-runtime'].Set;
meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
Promise = Package.promise.Promise;
BrowserPolicy = Package['browser-policy-common'].BrowserPolicy;
Collection2 = Package['aldeed:collection2-core'].Collection2;
ActiveRoute = Package['zimme:active-route'].ActiveRoute;
Autoupdate = Package.autoupdate.Autoupdate;
SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;
MongoObject = Package['aldeed:simple-schema'].MongoObject;

